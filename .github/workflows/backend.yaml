name: IFU visualiser backend
on: push

jobs:
  test_backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: katkov/postgres_q3c
        env:
          POSTGRES_USER: ifu_user
          POSTGRES_DB: ifu_db
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name db
    env:
    # semi-fake content of local.env file used for passing secrets into Docker container
      DJANGO_SECRET_KEY: topsecret
      DJANGO_DEBUG: True
      DB_HOST: localhost
      DB_USER: ifu_user
      DB_PASSWORD: postgres
      DB_NAME: ifu_db
      DB_PORT: 5435
      SILKY_INTERCEPT_PERCENT: 0

    steps:

      - name: Checkout repo
        uses: actions/checkout@v2


      - name: Install Postgres client (psql) and test DB and q3c extension availability
        run: |
          sudo apt-get -qq update;
          sudo apt-get -y install postgresql-client
          psql postgresql://ifu_user:postgres@localhost:5432/ifu_db -c 'SELECT 1;'
          psql postgresql://ifu_user:postgres@localhost:5432/ifu_db -c "select q3c_version();"
  

      - name: Populate database
        run: |
          cd preparation/db
          psql postgresql://ifu_user:postgres@localhost:5432/ifu_db -c "\i upload_data.sql"
          psql postgresql://ifu_user:postgres@localhost:5432/ifu_db -c "\dt+"
          
      
      - name: Install dependencies from requirements.txt
        run: |
          python -c "import sys; print(sys.version)"
          pip install -U pip
          pip install -r backend/requirements.txt

      - name: Run api application
        run: |
          cd backend
          python manage.py makemigrations
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput --link -v 2
          gunicorn website.wsgi --reload --workers 1 --bind 0.0.0.0:8000 --timeout 180 --log-level debug --access-logfile - --error-logfile - &
          curl -v 127.0.0.1:8080/api/
