version: '3'

services:
  postgres:
    container_name: postgres
    image: katkov/postgres_q3c
    environment:
      - POSTGRES_USER=ifu_user
      - POSTGRES_DB=ifu_db
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test:
        ['CMD', 'sh', '-c', 'pg_isready -U $$POSTGRES_USER -h $$(hostname -i)']
      interval: 10s
      timeout: 5s
      retries: 5

  testserver:
    container_name: testserver
    depends_on:
      - postgres
    build: ../backend/
    ports:
      - '8080:8080'
    volumes:
      - ../:/code
    environment:
      - DJANGO_SECRET_KEY=django_top_secret
      - DJANGO_DEBUG=True
      - DB_HOST=postgres
      - DB_NAME=ifu_db
      - DB_USER=ifu_user
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - SILKY_INTERCEPT_PERCENT=0
    command: bash -c "
      apt-get update -qq &&
      apt-get install -qq postgresql-client &&
      psql postgresql://$$DB_USER:$$DB_PASSWORD@$$DB_HOST:$$DB_PORT/$$DB_NAME -c '\\i preparation/db/upload_data.sql' &&
      psql postgresql://$$DB_USER:$$DB_PASSWORD@$$DB_HOST:$$DB_PORT/$$DB_NAME -c '\\dt+' &&
      cd backend &&
      python manage.py makemigrations &&
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput --link -v 2 &&
      gunicorn website.wsgi --reload --workers 1 --bind 0.0.0.0:8080 --timeout 180 --log-level debug --access-logfile - --error-logfile -"

  cypress:
    container_name: cypress
    image: cypress/included:8.3.1
    depends_on:
      - testserver
    environment:
      - CYPRESS_baseUrl=http://testserver:8080
    working_dir: /e2e
    volumes:
      - .:/e2e
